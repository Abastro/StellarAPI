buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

ext.config = parseConfig(file('build.properties'))

ext.stModVersion = "${config.version.stellarapi.major}.${config.version.stellarapi.minor}.${config.version.stellarapi.revis}.${config.version.stellarapi.patch}"
ext.wsModVersion = "${config.version.worldsets.major}.${config.version.worldsets.minor}.${config.worldsets.stellarapi.revis}"

version = "${config.version.minecraft}-${stModVersion}"
ext.wsversion = "${config.version.minecraft}-${wsModVersion}"

group= "${config.group}"
archivesBaseName = "${config.archive}"

minecraft {
    version = "${config.version.minecraft}-${config.version.forge}"
    runDir = "run"
    mappings = "${config.version.mcpmappings}"

    replace "@STVERSION@", project.version
    replace "@WSVERSION@", "${wsversion}"
}


dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task srcJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "stversion", project.version
    inputs.property "wsversion", project.wsversion
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'stversion':project.version, 'wsversion':project.wsversion, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

artifacts {
    archives deobfJar 
    archives srcJar
    archives jar
}

